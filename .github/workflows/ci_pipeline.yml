name: CI Pipeline

on:
  pull_request:
    branches:
      - develop
      - release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # google-services.json 파일 생성
      - name: Create .env.dev file
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" > android/app/google-services.json

      # .env.dev 파일 생성
      - name: Create .env.dev file
        run: echo "${{ secrets.ENV_DEV }}" > .env.dev

      # .env.prod 파일 생성
      - name: Create .env.prod file
        run: echo "${{ secrets.ENV_PROD }}" > .env.prod

      # Flutter SDK 캐시 설정
      - name: Cache Flutter SDK
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      # Flutter SDK 설치
      - name: Install Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.0'

      # Flutter 의존성 설치
      - name: Install Flutter dependencies
        run: flutter pub get

      # 린트 체크
      - name: Flutter lint check
        run: flutter analyze

      # Android 빌드
      - name: Build Android
        run: flutter build apk --release --no-shrink

#  # iOS 빌드(macOS 환경)
#  ios_build:
#    runs-on: macos-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      # Flutter SDK 캐시 설정
#      - name: Cache Flutter SDK
#        uses: actions/cache@v2
#        with:
#          path: ~/.pub-cache
#          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
#          restore-keys: |
#            ${{ runner.os }}-flutter-
#
#      # Flutter 의존성 설치
#      - name: Install Flutter dependencies
#        run: flutter pub get
#
#      # 린트 체크
#      - name: Flutter lint check
#        run: flutter analyze
#
#      # iOS 빌드
#      - name: Build iOS
#        run: flutter build ios --release --no-codesign